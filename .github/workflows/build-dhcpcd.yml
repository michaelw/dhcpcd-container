name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
      - 'dev'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'main'
      - 'dev'

# permissions for pushing to ghcr.io
permissions: 
  packages: write

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        platform:
          - { name: linux/amd64, slug: linux-amd64 } 
          - { name: linux/arm64, slug: linux-arm64 }

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: image=moby/buildkit:v0.10.6

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/michaelw/dhcpcd
          flavor: latest=true
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha

      - name: Build locally
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ matrix.platform.name }}
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ matrix.platform.name }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Extract rootfs
        id: rootfs
        if: github.event_name == 'release'
        run: |
            ID=$(docker create ghcr.io/michaelw/dhcpcd:${{ steps.meta.outputs.version }})
            DIST="dhcpcd-rootfs_${{ steps.meta.outputs.version }}_${{ matrix.platform.slug }}.tar.bz2"
            docker export "$ID" | bzip2 > "$DIST"
            echo "::set-output name=asset_path::${DIST}"

      - uses: actions/upload-release-asset@v1
        if: github.event_name == 'release'
        with:
            upload_url: ${{ github.event.release.upload_url }}
            asset_path: ${{ steps.rootfs.outputs.asset_path }}
            asset_content_type: application/tar+bzip2
